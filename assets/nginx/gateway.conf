server {
  listen 80;
  server_name _;

  # Use Docker's embedded DNS resolver and re-resolve periodically to avoid stale upstream IPs
  resolver 127.0.0.11 ipv6=off valid=30s;

  # Proxy headers
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_http_version 1.1;
  proxy_set_header Connection "";
  proxy_connect_timeout 2s;
  proxy_read_timeout 60s;
  proxy_send_timeout 60s;

  # API under /api -> server container
  # Use a variable for proxy_pass so nginx re-resolves the hostname when it changes
  location /api/ {
    set $api_upstream http://raworc_api:9000;
    proxy_pass $api_upstream;
  }
  location = /api { return 301 /api/; }

  # Public content under /content -> content container
  location /content/ {
    set $content_upstream http://raworc_content:8000;
    proxy_pass $content_upstream;
  }
  location = /content { return 301 /content/; }

  # Root -> Operator UI (operator container on :7000)
  location / {
    set $operator_upstream http://raworc_operator:7000;
    proxy_pass $operator_upstream;
  }
}
