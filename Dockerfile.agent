FROM ubuntu:24.04

# Install system packages
RUN apt-get update && \
    apt-get install -y \
    sudo git gh btop curl vim net-tools \
    build-essential pkg-config libssl-dev \
    ripgrep unzip wget gpg tmux tree fzf \
    python3 python3-dev python3-venv python3-pip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create Python symlink
RUN ln -sf /usr/bin/python3 /usr/local/bin/python

# Create agent user
RUN useradd -m -s /bin/bash agent && \
    echo 'agent ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER agent
WORKDIR /home/agent
ENV HOME=/home/agent

# Install Node.js via NVM
RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && \
    export NVM_DIR="$HOME/.nvm" && \
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && \
    nvm install --lts && \
    nvm use --lts && \
    nvm alias default lts/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y

# Create global symlinks as root
USER root
RUN export NVM_DIR="/home/agent/.nvm" && \
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && \
    NODE_VERSION=$(nvm version default) && \
    ln -sf $NVM_DIR/versions/node/$NODE_VERSION/bin/node /usr/local/bin/node && \
    ln -sf $NVM_DIR/versions/node/$NODE_VERSION/bin/npm /usr/local/bin/npm && \
    ln -sf /home/agent/.cargo/bin/cargo /usr/local/bin/cargo && \
    ln -sf /home/agent/.cargo/bin/rustc /usr/local/bin/rustc

USER agent

# Setup environment for interactive and non-interactive shells
RUN echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.bashrc && \
    echo '. "$HOME/.cargo/env"' >> ~/.bashrc && \
    echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.profile && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.profile && \
    echo '. "$HOME/.cargo/env"' >> ~/.profile

# Set environment variables for runtime
ENV NVM_DIR=/home/agent/.nvm

# Copy pre-built binary from local build
USER root
COPY target/release/raworc-agent /usr/local/bin/raworc-agent

# Create agent directory structure with proper permissions
# This provides a fallback structure and ensures correct permissions
RUN mkdir -p /agent/code /agent/secrets /agent/logs /agent/content && \
    chown -R agent:agent /agent && \
    chmod -R 755 /agent

# Switch back to agent user and set working directory to /agent
USER agent
WORKDIR /agent

# Configure environment variables for agent structure
ENV RAWORC_AGENT_DIR=/agent

CMD ["raworc-agent", "--api-url", "http://raworc_server:9000", "--agent-name", "unknown", "--api-key", "unknown"]
