name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Triggers on version tags like 0.2.0, 1.0.0, etc.

permissions:
  contents: write  # Required for creating releases
  packages: write  # Required for publishing packages

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Install doctl (DigitalOcean CLI)
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean Container Registry (DOCR)
        run: doctl registry login --expiry-seconds 600
          
      - name: Set up Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building and publishing version: $VERSION"
          
      - name: Build Docker images
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh
          
      - name: Push Docker images to DigitalOcean Container Registry
        run: |
          chmod +x ./scripts/push.sh
          ./scripts/push.sh --tag ${{ steps.get_version.outputs.VERSION }} --registry registry.digitalocean.com/raworc
          
      - name: Publish CLI to npm
        working-directory: ./cli
        run: |
          # Version is already set in package.json, just publish
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        run: |
          gh release create ${{ steps.get_version.outputs.VERSION }} \
            --title "Release ${{ steps.get_version.outputs.VERSION }}" \
            --notes "## Raworc ${{ steps.get_version.outputs.VERSION }}
          
          ### Published Packages
          - **Docker Images (DOCR)**:
            - \`registry.digitalocean.com/raworc/raworc_api:${{ steps.get_version.outputs.VERSION }}\`
            - \`registry.digitalocean.com/raworc/raworc_controller:${{ steps.get_version.outputs.VERSION }}\`
            - \`registry.digitalocean.com/raworc/raworc_agent:${{ steps.get_version.outputs.VERSION }}\`
            - \`registry.digitalocean.com/raworc/raworc_operator:${{ steps.get_version.outputs.VERSION }}\`
            - \`registry.digitalocean.com/raworc/raworc_content:${{ steps.get_version.outputs.VERSION }}\`
            - \`registry.digitalocean.com/raworc/raworc_gateway:${{ steps.get_version.outputs.VERSION }}\`
            - \`registry.digitalocean.com/raworc/raworc_app_githex:${{ steps.get_version.outputs.VERSION }}\`
          - **npm Package**: \`@raworc/cli@${{ steps.get_version.outputs.VERSION }}\`
          
          ### Installation
          \`\`\`bash
          npm install -g @raworc/cli@${{ steps.get_version.outputs.VERSION }}
          raworc start
          \`\`\`
          
          All images are also tagged as \`:latest\` at DOCR"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
